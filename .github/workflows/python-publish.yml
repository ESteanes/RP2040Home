# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  pypi-publish:
    name: Build RP2040Home and publish to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9.x"
      - name: Get Release Version from Git Tag
        id: get_version
        run: echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: build release distributions
        run: |
          pip install -r requirements.txt
          python -m build
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
      - name: run unit test
        run: python -m unittest discover -s RP2040Home/test/ -p "*_test.py"
      # - name: upload windows dists
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: release-dists
      #     path: dist/
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.14
